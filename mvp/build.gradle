apply plugin: 'com.android.library'
apply from: '../findbugs.gradle'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)

        packagingOptions {
            exclude 'LICENSE.txt'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaSourceCompatibility
        targetCompatibility rootProject.ext.javaTargetCompatibility
    }

    /*
    testOptions {
      unitTests.returnDefaultValues = true
    }
    */
}

dependencies {

    api 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion

    api project(':mvp-common')
    api project(':presentermanager')
    api project(':utils-fragment')

    testImplementation 'junit:junit:' + rootProject.ext.junitVersion
    testImplementation 'org.mockito:mockito-core:' + rootProject.ext.mockitoVersion

    testImplementation "org.robolectric:robolectric:" + rootProject.ext.robolectricVersion
    testImplementation "org.robolectric:shadows-support-v4:" + rootProject.ext.robolectricVersion

    testImplementation('org.powermock:powermock-api-mockito:' + rootProject.ext.powermockVersion) {
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }
    testImplementation('org.powermock:powermock-module-junit4:' + rootProject.ext.powermockVersion) {
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }
}
